runtime:
  seed: &seed 42
  tensor_model_parallel_size: 2
  pipeline_model_parallel_size: 1
  context_parallel_size: 4
  deepspeed: True
  lora_mode: False
  bf16: &bf16 True
  fp16: &fp16 False


deepspeed:
  config:
    gradient_clipping: 1.0
    zero_optimization:
      stage: 0
    bf16:
      enabled: *bf16
    fp16:
      enabled: *fp16
    steps_per_print: 2000
    wall_clock_breakdown: False

tokenizer:
  type: LlamaTokenizer
  kwargs:
    tokenizer_name_or_path: /root/llama2-7b
  pad_vocab_size_to: 32000
  make_vocab_size_divisible_by: 8


tokenization: &tokenization
  type: sense_tokenization
  kwargs:
    with_tokenizer: True
    max_seq_length: &train_seq_length 2048
    parser_type: simple_chat


infer_tokenization:
  type: sense_tokenization
  kwargs:
    max_seq_length: 2048
    parser_type: simple_chat


data:
  data_types: [train, infer]
  train:
    seq_length: *train_seq_length
    global_batch_size: &train_global_batch_size 128
    micro_batch_size: &train_micro_batch_size 1
    dataset:
      type: base_nlp_json
      kwargs:
        json_file: alpaca_data_zh_51k.json
        transformer: [*tokenization]
        json_type: all
    batch_sampler:
      type: megatron_pretrain
      kwargs:
        micro_batch_size: *train_micro_batch_size
        drop_last: True
    batch_collector:
      type: batch_align
      kwargs:
        alignment: *train_seq_length
        max_seq_length: *train_seq_length
    data_loader:
      type: base
      kwargs:
        num_workers: 2
        pin_memory: True
        seed: *seed
    batch_pipe:
      type: flash_batch_pipe
      kwargs:
        eod_mask_loss: True
    # notice the batch_calculator only works at the training time
    batch_calculator:
      type: constant_num
      kwargs:
        # start_batch_size: 32
        # batch_size_increment: 8
        # ramup_samples: 1000
        global_batch_size: *train_global_batch_size
        micro_batch_size: *train_micro_batch_size
  infer:
    seq_length: &infer_seq_length 40
    global_batch_size: &infer_global_batch_size 1
    micro_batch_size: &infer_micro_batch_size 1
    batch_pipe:
      type: token_batch_pipe
      kwargs:
        reset_position_ids: False
        reset_attention_mask: False
        eod_mask_loss: False
        loss_on_targets_only: False


trainer:
  train_iters: 300
  optimizer:
    type: AdamW # FusedAdam      # apex FusedAdam
    kwargs:
      lr: 2.e-5
      weight_decay: 0
      betas: [0.9, 0.95]
      eps: 1.e-8
      fused: True
  lr_scheduler:
    type: iter_base_annealing
    kwargs:
      min_lr: 1.e-6
      decay_style: cosine
      lr_warmup_iters: 100
      lr_decay_iters: 800
      use_checkpoint_lr_scheduler: False
      override_lr_scheduler: False

saver:
  save_path: checkpoints/llama_7b_tp2_pp1_cp4
  save_interval: 1000              # set save_interval to 0 to not save any ckpt.
  save_mode: deepspeed
  save_optim: True
  save_rng_state: True
  save_zero: True

loader:
  load_path: /root/llama2-7b
  load_mode: huggingface
  load_optim: True
  load_rng_state: True
  load_zero: False
  load_base_state: False
  debug: False


hooks:
  - type: train_val_logger
    kwargs:
      log_interval: 1
      report_memory_interval: 10
      log_dir: tf_logs/llama-7b-tp2-pp1-cp4
      tensorboard: True
  
model:
  type: llama_7b
  kwargs:
    use_flash_attn: True
    sequence_parallel: True
    dynamic_checkpoint:
      enabled: True
      size_map:
        1024: 0
        2048: [0, 0, 0, 0, 0, 0, 0, 0]
        4096: [0, 0, 0, 0, 0, 0, 0, 0]
        8192: [0, 0, 0, 0, 0, 0, 0, 0]
        9192: [0, 0, 0, 0, 0, 0, 0, 0]
        65536: [0, 0, 0, 0]
